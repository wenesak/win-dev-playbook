---
- name: Configure windows development environment from WSL 2.
  hosts: wsl
  become: true
  vars_files:
    ../vars/vars.yml
  tasks:
  - name: Use Dutch Debian mirrors.
    replace:
      path: /etc/apt/sources.list
      regexp: 'deb\.'
      replace: 'ftp.nl.'
  - name: Update apt-get repo and cache
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
  - name: Upgrade all apt packages
    apt: upgrade=dist force_apt_get=yes
  - name: Autoremove packages no longer needed.
    apt: autoremove=yes
  - name: Autoclean temporary package data.
    apt: autoclean=yes
  - name: Check if a reboot is needed for Debian and Ubuntu boxes
    stat: path=/var/run/reboot-required get_md5=no
    register: reboot_required_file
  - name: Reboot the Debian or Ubuntu server
    reboot:
      msg: "Reboot initiated by Ansible due to kernel updates"
      connect_timeout: 5
      reboot_timeout: 300
      pre_reboot_delay: 0
      post_reboot_delay: 30
      test_command: uptime
    when: reboot_required_file.stat.exists
  - name: Import Docker APT key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Import Elastic APT key
    apt_key:
      url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
      state: present
  - name: Import YARN APT key
    apt_key:
      url: https://dl.yarnpkg.com/debian/pubkey.gpg
      state: present
  - name: Import Azul APT key
    apt_key:
      url: "https://assets.azul.com/files/0xB1998361219BD9C9.txt"
      id: "0xB1998361219BD9C9"
  - name: Install Elastic repo
    apt_repository:
      repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
      state: present
      update_cache: yes
  - name: Install YARN APT repo
    apt_repository:
      repo: "deb https://dl.yarnpkg.com/debian/ stable main"
      filename: "yarn"
      state: present
      update_cache: yes
  - name: Install  Software with apt.
    apt:
      name:
      - rsync
      - ssh
      - git
      - ctags
      - cscope
      - neovim
      - tmux
      - curl
      - jq
      - wget
      - sed
      - nmap
      - net-tools
      - telnet
      - htop
      - p7zip-full
      - aptitude
      - rake
      - tree
      - fd-find
      - fzf
      - ripgrep
      - groff
      - vifm
      - zsh
      - man
      - openjdk-11-jdk-headless
      - maven
      - yarn
      - logstash
      - fd-find
      - golang
      - cargo
      - texlive-full
      - pandoc
      state: latest
  - name: Uninstall packages
    apt:
      name:
      - vim
      state: absent
  - name: NodeJS
    apt:
      name: 
        - nodejs
        - npm
      state: latest
  - name: Global install npm editorconfig package.
    npm:
      name: editorconfig
      state: latest
      global: yes
  - name: Global install npm eclint package.
    npm:
      name: eclint
      state: latest
      global: yes
  - name: Global install npm neovim package.
    npm:
      name: neovim
      state: latest
      global: yes
  - name: 'Install Python 3 and pip 3.'
    apt:
      name:
      - python3
      - python3-pip
      - libffi-dev
      state: latest
#  - name: Create systemd directory
#    file:
#      path: /sys/fs/cgroup/systemd
#      state: directory
#      owner: root
#      group: root
#      mode: 0775
#  - name: 'Mount systemd directory for use with docker containers'
#    command: 'sudo mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd'
